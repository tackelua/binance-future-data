const fs = require('fs');
const path = require('path');

const outputPath = path.join(__dirname, 'allAccountTrades.json');

/**
 * H√†m ch√≠nh ƒë·ªÉ ƒë·ªçc d·ªØ li·ªáu v√† t√≠nh to√°n PNL
 */
function calculateTotalPnl() {
    console.log('üöÄ B·∫Øt ƒë·∫ßu t√≠nh t·ªïng PnL t·ª´ file allAccountTrades.json...');

    try {
        // ƒê·ªçc v√† ph√¢n t√≠ch c√∫ ph√°p file JSON
        const tradesData = fs.readFileSync(outputPath, 'utf8');
        const trades = JSON.parse(tradesData);

        if (trades.length === 0) {
            console.log('üü° Kh√¥ng c√≥ giao d·ªãch n√†o ƒë·ªÉ t√≠nh to√°n.');
            return;
        }

        let totalPnl = 0;
        let totalCommission = 0;
        let filteredTrades = 0;

        // Ng√†y b·∫Øt ƒë·∫ßu th√°ng 8/2025 (timestamp)
        const startOfAugust2025 = new Date('2025-08-01T00:00:00Z').getTime();

        // L·∫∑p qua t·∫•t c·∫£ c√°c giao d·ªãch ƒë·ªÉ t√≠nh to√°n
        trades.forEach(trade => {
            // Ki·ªÉm tra th·ªùi gian giao d·ªãch (trade.time l√† timestamp)
            const tradeTime = parseInt(trade.time);

            // Ch·ªâ t√≠nh nh·ªØng giao d·ªãch t·ª´ ƒë·∫ßu th√°ng 8/2025
            if (tradeTime > startOfAugust2025) {
                return; // B·ªè qua giao d·ªãch n√†y
            }

            filteredTrades++;
            const tradeDate = new Date(tradeTime).toISOString().split('T')[0]; // Format YYYY-MM-DD

            // PnL ƒë∆∞·ª£c l∆∞u tr·ª±c ti·∫øp trong tr∆∞·ªùng 'pnl' c·ªßa m·ªói giao d·ªãch
            const pnl = parseFloat(trade.realizedPnl);
            if (!isNaN(pnl)) {
                totalPnl += pnl;
            }
            console.log(`- ${trade.symbol} (${tradeDate}): PnL = ${pnl.toFixed(4)} USDT - Total PnL = ${totalPnl.toFixed(4)} USDT`);

            // Ph√≠ giao d·ªãch ƒë∆∞·ª£c l∆∞u trong tr∆∞·ªùng 'commission'
            const commission = parseFloat(trade.commission);
            if (!isNaN(commission)) {
                totalCommission += commission;
            }
        });

        console.log('\n======================================================');
        console.log('üìä K·∫æT QU·∫¢ T√çNH TO√ÅN (T·ª´ ƒë·∫ßu th√°ng 8/2025)');
        console.log(`   - T·ªïng s·ªë giao d·ªãch: ${trades.length}`);
        console.log(`   - Giao d·ªãch t·ª´ 01/08/2025: ${filteredTrades}`);
        console.log(`   - T·ªïng PnL (L√£i v√† L·ªó): ${totalPnl.toFixed(4)} USDT`);
        console.log(`   - T·ªïng ph√≠ giao d·ªãch: ${totalCommission.toFixed(4)} USDT`);
        console.log('======================================================');

    } catch (error) {
        if (error.code === 'ENOENT') {
            console.error(`‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y file ${outputPath}. Vui l√≤ng ch·∫°y script l·∫•y l·ªãch s·ª≠ giao d·ªãch tr∆∞·ªõc.`);
        } else {
            console.error(`‚ùå ƒê√£ x·∫£y ra l·ªói khi ƒë·ªçc ho·∫∑c ph√¢n t√≠ch file JSON: ${error.message}`);
        }
    }
}

// Ch·∫°y h√†m ch√≠nh
calculateTotalPnl();